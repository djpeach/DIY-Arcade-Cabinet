# For MAPPINGS: Slash is the control button, Num1 is the Player1 Start and Num2 is the Player2 Start
# All other mappings are just their key, uppercased

NAME Dodgy Blocks
EXE_PATH dodgy_blocks/dodgy_blocks/
START1 rm dodgy_blocks && cmake . && make && ./dodgy_blocks
BG_COLOR 23 119 200
LOGO logo.png

MAPPING Quit:Slash
MAPPING Move Left:A
MAPPING Move Right:D
MAPPING Boost Speed:F
INSTRUCTION White removes a life
INSTRUCTION Blue awards 25 points
INSTRUCTION Red awards an extra life, max 3

AUTHOR Daniel Peach
LANGUAGE C++ with SFML

END_GAME_ENTRY

NAME Duck Hunter
EXE_PATH duck_hunter/
START1 rm duck_hunter && cmake . && make && ./duck_hunter
BG_COLOR 200 119 24
LOGO logo.png

MAPPING Move Up:W
MAPPING Move Down:S
MAPPING Move Left:A
MAPPING Move Right:D
MAPPING Fire Gun:F
MAPPING Quit:Slash
INSTRUCTION Shoot the ducks :)

AUTHOR Daniel Peach
LANGUAGE C++ with SFML

END_GAME_ENTRY

NAME Signal Boost
EXE_PATH signal_boost/
START1 love game 1
START2 love game 2
BG_COLOR 3 186 176
LOGO game/assets/logo.png

MAPPING P1 Move Up:W
MAPPING P1 Move Down:S
MAPPING P1 Fire:F
MAPPING P1 Reset:E
MAPPING P2 Move Up:I
MAPPING P2 Move Down:K
MAPPING P2 Fire:H
MAPPING P2 Reset:Up
INSTRUCTION Use your paddle to keep the signal alive!
INSTRUCTION Fire to shoot the enemies.
INSTRUCTION Work together or play solo.

AUTHOR Jake White
LANGUAGE Lua with LOVE2D

END_GAME_ENTRY

NAME Cube Checkers
EXE_PATH cube_checkers/
START2 rm cube_checkers && cmake . && make && ./cube_checkers
BG_COLOR 255 20 20
LOGO assets/images/logo.png

MAPPING Player 1 Move Up:W
MAPPING Player 1 Move Down:S
MAPPING Player 1 Move Left:A
MAPPING Player 1 Move Right:D
MAPPING Player 2 Move Up:I
MAPPING Player 2 Move Down:K
MAPPING Player 2 Move Left:J
MAPPING Player 2 Move Right:L
MAPPING Player 1 Select:F
MAPPING Player 2 Select:H
MAPPING Quit:Slash

INSTRUCTION Move a piece, increment a piece
INSTRUCTION When you get a piece value to 6, it is a king
INSTRUCTION You have to take a jump if it is available
INSTRUCTION No incrementing after a jump
INSTRUCTION Clear or block all opponent pieces

AUTHOR Daniel Peach
LANGUAGE C++ with SFML

END_GAME_ENTRY

NAME Arcade Chess
EXE_PATH arcade_chess/
START2 npm install && npm start
BG_COLOR 255 20 20
LOGO logo.png

MAPPING Player 1 Move Up:W
MAPPING Player 1 Move Down:S
MAPPING Player 1 Move Left:A
MAPPING Player 1 Move Right:D
MAPPING Player 2 Move Up:I
MAPPING Player 2 Move Down:K
MAPPING Player 2 Move Left:J
MAPPING Player 2 Move Right:L
MAPPING Player 1 Select:F
MAPPING Player 2 Select:H
MAPPING Quit:Slash

INSTRUCTION Play chess :)

AUTHOR Daniel Peach
LANGUAGE JavaScript with HTML Canvas

END_GAME_ENTRY

NAME Mode Zero Racing
EXE_PATH mode_zero_racing/
START2 pip3 install -r requirements.txt && python3 main.py
BG_COLOR 255 20 20
# LOGO logo.png

AUTHOR Evan Wilt, Jake White
LANGUAGE Python

END_GAME_ENTRY
